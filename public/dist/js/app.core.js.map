{"version":3,"names":[],"mappings":"","sources":["app.core.js"],"sourcesContent":["var app;\n(function (app) {\n    var core;\n    (function (core) {\n        'use strict';\n        appRun.$inject = [\"$rootScope\", \"$timeout\", \"dataservice\", \"$state\", \"stateChecking\", \"$location\"];\n        configure.$inject = [\"$stateProvider\", \"$locationProvider\", \"$urlRouterProvider\", \"$qProvider\", \"$httpProvider\"];\n        angular.module('app.core', []);\n        angular\n            .module('app.core')\n            .config(configure)\n            .run(appRun)\n            .constant('_', window._)\n            .constant('Rx', window.Rx || undefined)\n            .constant('API', { 'URL': \"https:\" + API_MAIN, 'DATA': null });\n        /* @ngInject */\n        function appRun($rootScope, $timeout, dataservice, $state, stateChecking, $location) {\n            // checking data valid, or clear all cache!\n            dataservice.checkDataRetention();\n            $rootScope.$on('$stateChangeStart', function (e, toState, toParams, fromState, fromParams) {\n                // controll page validation and rediraction\n                stateChecking.run(e, toState, $state, $location);\n            });\n            //lodash globaly\n            $rootScope._ = window._;\n            $rootScope.angularLoader = 0;\n            $rootScope.$on(\"$stateChangeSuccess\", function () {\n                console.info('Angular Loaded');\n            });\n        }\n        /* @ngInject */\n        function configure($stateProvider, $locationProvider, $urlRouterProvider, $qProvider, $httpProvider) {\n            $qProvider.errorOnUnhandledRejections(false);\n            $httpProvider.defaults.headers.post['Accept'] = 'application/json, text/javascript';\n            $httpProvider.defaults.headers.post['Content-Type'] = 'multipart/form-data; charset=utf-8';\n            $httpProvider.defaults.headers['Function-Code'] = 'DFKJ884576*_35465fdjfuyrt+_*45@%_=_*56%@!~^';\n            $locationProvider.html5Mode(true);\n            $urlRouterProvider.otherwise('/app');\n            var states = getStates();\n            states.forEach(function (state) {\n                console.log('state> ', state.state);\n                $stateProvider.state(state.state, state.config);\n            });\n        }\n        function getStates() {\n            return [\n                {\n                    state: 'welcome',\n                    config: {\n                        url: '/app',\n                        template: '<welcome></welcome>',\n                        title: 'Welcome',\n                        settings: {\n                            nav: 1\n                        },\n                    }\n                },\n                {\n                    state: 'terms',\n                    config: {\n                        url: '/app/tc',\n                        template: '<terms></terms>',\n                        title: 'Terms and Conditions',\n                        settings: {\n                            nav: 1\n                        },\n                    }\n                },\n                {\n                    state: 'application',\n                    config: {\n                        url: '/app/application',\n                        template: '<application></application>',\n                        title: 'Application',\n                        settings: {\n                            nav: 1\n                        },\n                    },\n                },\n                {\n                    state: 'complete',\n                    config: {\n                        url: '/app/application/:decission',\n                        template: '<complete></complete>',\n                        title: 'Complete',\n                        settings: {\n                            nav: 1\n                        },\n                    }\n                }\n            ];\n        }\n    })(core = app.core || (app.core = {}));\n})(app || (app = {}));\n"],"file":"app.core.js"}