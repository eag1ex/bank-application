{"version":3,"names":[],"mappings":"","sources":["app.welcome.js"],"sourcesContent":["var app;\n(function (app) {\n    var welcome;\n    (function (welcome) {\n        'use strict';\n        var MainController = /** @class */ (function () {\n            /**\n             * app.welcome script registers new or existing token, call gets made to dataservice.registerUser\n             * and if user is new then it will register or prompt that it exists and will redirect to terms page.\n             * after post request is made, the data then gets cashed to the subsequent page, unless you refress the page,\n             * no persistante cache have been integrated at this stage only RESTFUL api.\n             */\n            /* @ngInject */\n            MainController.$inject = [\"$scope\", \"$element\", \"$document\", \"$timeout\", \"$q\", \"dataservice\", \"$state\"];\n            function MainController($scope, $element, $document, $timeout, $q, dataservice, $state) {\n                this.$scope = $scope;\n                this.$element = $element;\n                this.$document = $document;\n                this.$timeout = $timeout;\n                this.$q = $q;\n                this.dataservice = dataservice;\n                this.$state = $state;\n                this.formOnsubmit = false;\n                this.registerNewUser = {\n                    valid: '',\n                    invalid: ''\n                };\n            }\n            MainController.prototype.redirectingToNext = function (state) {\n                var _this = this;\n                if (state === void 0) { state = 'welcome'; }\n                this.$timeout(function () {\n                    _this.$state.go(state);\n                }, 2500);\n            };\n            MainController.prototype.registerUser = function () {\n                var _this = this;\n                if (this.$scope.welcomeForm.$invalid)\n                    return;\n                if (this.registerNewUser.valid) {\n                    this.redirectingToNext('terms');\n                    return;\n                }\n                // in case we do subsequent submit events;\n                this.dataservice.resetExisting();\n                this.formOnsubmit = true;\n                var token = this.registerNewUser.token;\n                this.dataservice.registerUser(token).then(function (data) {\n                    var newData = data;\n                    _this.existingUser = false;\n                    _this.registerNewUser.invalid = false;\n                    if (newData.invalidToken) {\n                        _this.registerNewUser.valid = '';\n                        _this.existingUser = false;\n                        _this.registerNewUser.invalid = true;\n                    }\n                    if (newData.userExists === true) {\n                        console.log('newData exists', newData);\n                        // data is already cached at this point           \n                        _this.registerNewUser.valid = false;\n                        _this.existingUser = true;\n                        // got to next page\n                        if (newData.data.form !== undefined) {\n                            _this.welcomeUser = newData.data.form.one.firstName;\n                            _this.dataservice.GLOBALS.terms = newData.data.form.tc;\n                        }\n                        _this.clickToContinue = true;\n                        _this.redirectingToNext('terms');\n                    }\n                    if (newData.userExists === false) {\n                        // data is already cached at this point   \n                        _this.existingUser = false;\n                        _this.registerNewUser.valid = true;\n                        // got to next page\n                    }\n                }, function (err) {\n                    return err;\n                }).catch(function (err) {\n                    _this.registerNewUser.valid = false;\n                    console.log('server error ', err);\n                });\n            };\n            return MainController;\n        }());\n        welcome.MainController = MainController;\n        var MainComponent = /** @class */ (function () {\n            function MainComponent() {\n                this.restrict = 'E';\n                this.controllerAs = \"vm\";\n                this.templateUrl = 'dist/js/app.welcome.html';\n                this.controller = MainController;\n            }\n            return MainComponent;\n        }());\n        angular\n            .module('app.welcome', []);\n        angular\n            .module('app.welcome').component('welcome', new MainComponent());\n    })(welcome = app.welcome || (app.welcome = {}));\n})(app || (app = {}));\n"],"file":"app.welcome.js"}